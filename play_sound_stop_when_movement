import android.content.Context
import android.hardware.Sensor
import android.hardware.SensorEvent
import android.hardware.SensorEventListener
import android.hardware.SensorManager
import android.media.AudioAttributes
import android.media.SoundPool
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity(), SensorEventListener {
    private lateinit var sensorManager: SensorManager
    private lateinit var soundPool: SoundPool
    private var soundId = 0

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // Initialize SensorManager and SoundPool
        sensorManager = getSystemService(Context.SENSOR_SERVICE) as SensorManager
        soundPool = SoundPool.Builder()
            .setMaxStreams(1)
            .setAudioAttributes(AudioAttributes.Builder()
                .setUsage(AudioAttributes.USAGE_ALARM)
                .build())
            .build()

        // Load sound file into SoundPool
        soundId = soundPool.load(this, R.raw.sound_file, 1)

        // Register listener for accelerometer sensor
        sensorManager.registerListener(this,
            sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
            SensorManager.SENSOR_DELAY_NORMAL)
    }

    override fun onSensorChanged(event: SensorEvent?) {
        if (event?.sensor?.type == Sensor.TYPE_ACCELEROMETER) {
            val x = event.values[0]
            val y = event.values[1]
            val z = event.values[2]

            // Calculate acceleration vector magnitude
            val acceleration = sqrt(x * x + y * y + z * z)

            // Stop sound if acceleration vector magnitude exceeds threshold value
            if (acceleration > 10) {
                soundPool.stop(soundId)
            } else {
                // Play sound file with maximum volume if it's not already playing
                if (soundPool.play(soundId, 1f, 1f, 0, -1, 1f) == 0) {
                    soundPool.autoResume()
                }
            }
        }
    }

    override fun onAccuracyChanged(sensor: Sensor?, accuracy: Int) {}
}
